name: Redis Sentinel Cluster CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  redis-cluster:
    runs-on: ubuntu-latest
    services:
      redis-master:
        image: redis:7.2
        options: >-
          --health-cmd="redis-cli -a masterpass ping || exit 1"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=5
        volumes:
          - ./master/ha.conf:/etc/redis/redis.conf
        command: ["redis-server", "/etc/redis/redis.conf"]

      slave_1:
        image: redis:7.2
        volumes:
          - ./slave_1/redis.conf:/etc/redis/redis.conf
        command: ["redis-server", "/etc/redis/redis.conf"]

      slave_2:
        image: redis:7.2
        volumes:
          - ./slave_2/redis.conf:/etc/redis/redis.conf
        command: ["redis-server", "/etc/redis/redis.conf"]

      slave_3:
        image: redis:7.2
        volumes:
          - ./slave_3/redis.conf:/etc/redis/redis.conf
        command: ["redis-server", "/etc/redis/redis.conf"]

      sentinel_1:
        image: redis:7.2
        volumes:
          - ./sentinel_1/sentinel.conf:/etc/redis/sentinel.conf
        command: ["redis-sentinel", "/etc/redis/sentinel.conf"]

      sentinel_2:
        image: redis:7.2
        volumes:
          - ./sentinel_2/sentinel.conf:/etc/redis/sentinel.conf
        command: ["redis-sentinel", "/etc/redis/sentinel.conf"]

      sentinel_3:
        image: redis:7.2
        volumes:
          - ./sentinel_3/sentinel.conf:/etc/redis/sentinel.conf
        command: ["redis-sentinel", "/etc/redis/sentinel.conf"]

    steps:
      - uses: actions/checkout@v4

      - name: Wait for master
        run: |
          for i in {1..20}; do
            if docker run --network host --rm redis:7.2 redis-cli -a masterpass -h 127.0.0.1 -p 6379 ping | grep -q PONG; then
              echo "Redis master is ready"
              exit 0
            fi
            echo "Waiting for Redis master..."
            sleep 3
          done
          exit 1

      - name: Wait for Sentinel quorum
        run: |
          for i in {1..20}; do
            if docker run --network host --rm redis:7.2 redis-cli -p 26379 SENTINEL get-master-addr-by-name mymaster | grep -q redis-master; then
              echo "Sentinel quorum established"
              exit 0
            fi
            echo "Waiting for Sentinel..."
            sleep 3
          done
          exit 1

      - name: Simulate Failover
        run: |
          echo "Initial master:"
          docker run --network host --rm redis:7.2 redis-cli -p 26379 SENTINEL get-master-addr-by-name mymaster

          echo "Killing redis-master..."
          docker kill $(docker ps --filter "name=redis-master" -q)
          sleep 15

          echo "New master after failover:"
          docker run --network host --rm redis:7.2 redis-cli -p 26379 SENTINEL get-master-addr-by-name mymaster
